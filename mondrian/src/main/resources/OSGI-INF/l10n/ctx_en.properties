ctx.ocd.name=BasicContext-Configuration
ctx.ocd.description=Configuration of an BasicContext.
name.name=Name
name.description=The human readable name of the Context
description.name=Description
description.description=The human readable description of the Context

queryLimit.name=QueryLimit
queryLimit.description=<p>Maximum number of simultaneous queries the system will allow.</p> <p>Oracle fails if you try to run more than the 'processes' parameter in init.ora, typically 150. The throughput of Oracle and other databases will probably reduce long before you get to their limit.</p>

cellBatchSize.name=CellBatchSize
cellBatchSize.description=Integer property that, if set to a value greater than zero, sets a hard limit on the number of cells that are batched together when building segments.

resultLimit.name=ResultLimit
resultLimit.description=Integer property that, if set to a value greater than zero, limits the maximum size of a result set.

highCardChunkSize.name=HighCardChunkSize
highCardChunkSize.description=Property that establishes the amount of chunks for querying cells involving high-cardinality dimensions. Should prime with {@link #ResultLimit mondrian.result.limit}.

testName.name=TestName
testName.description=<p>String property that determines which tests are run.</p> <p>This is a regular expression as defined by {@link java.util.regex.Pattern}. If this property is specified, only tests whose names match the pattern in its entirety will be run.</p> @see #TestClass

testClass.name=TestClass
testClass.description=<p>String property that determines which test class to run.</p> <p>This is the name of the class. It must either implement {@code junit.framework.Test} or have a method {@code public [static] junit.framework.Test suite()}.</p> <p>Example:</p> <blockquote><code>mondrian.test.Class=mondrian.test.FoodMartTestCase</code></blockquote> @see #TestName

testHighCardinalityDimensionList.name=TestHighCardinalityDimensionList
testHighCardinalityDimensionList.description=Property containing a list of dimensions in the Sales cube that should be treated as high-cardinality dimensions by the testing infrastructure. This allows us to run the full suite of tests with high-cardinality functionality enabled.

foodmartJdbcURL.name=FoodmartJdbcURL
foodmartJdbcURL.description=<p>Property containing the JDBC URL of the FoodMart database. The default value is to connect to an ODBC data source called MondrianFoodMart.</p><p>To run the test suite, first load the FoodMart data set into the database of your choice. Then set the driver.classpath, mondrian.foodmart.jdbcURL and mondrian.jdbcDrivers properties, by un-commenting and modifying one of the sections below. Put the JDBC driver jar into mondrian/testlib.</p>

testJdbcUser.name=TestJdbcUser
testJdbcUser.description=Property containing the JDBC user of a test database. The default value is null, to cope with DBMSs that don't need this.

testJdbcPassword.name=TestJdbcPassword
testJdbcPassword.description=Property containing the JDBC password of a test database. The default value is null, to cope with DBMSs that don't need this.

enableInMemoryRollup.name=EnableInMemoryRollup
enableInMemoryRollup.description=Property which turns on or off the in-memory rollup of segment data. Defaults to true.

segmentCache.name=SegmentCache
segmentCache.description=Property which defines which SegmentCache implementation to use. Specify the value as a fully qualified class name, such as <code>org.example.SegmentCacheImpl</code> where SegmentCacheImpl is an implementation of {@link mondrian.spi.SegmentCache}.

sparseSegmentCountThreshold.name=SparseSegmentCountThreshold
sparseSegmentCountThreshold.description=<p>Property that, with {@link #SparseSegmentDensityThreshold}, determines whether to choose a sparse or dense representation when storing collections of cell values in memory.</p> <p>When storing collections of cell values, Mondrian has to choose between a sparse and a dense representation, based upon the <code>possible</code> and <code>actual</code> number of values. The <code>density</code> is <code>actual / possible</code>.</p>

sparseSegmentDensityThreshold.name=SparseSegmentDensityThreshold
sparseSegmentDensityThreshold.description=Property that, with {@link #SparseSegmentCountThreshold}, determines whether to choose a sparse or dense representation when storing collections of cell values in memory.

queryFilePattern.name=QueryFilePattern
queryFilePattern.description=Property that defines a pattern for which test XML files to run.  Pattern has to match a file name of the form: <code>query<i>whatever</i>.xml</code> in the directory. Example: mondrian.test.QueryFilePattern=queryTest_fec[A-Za-z0-9_]*.xml

queryFileDirectory.name=QueryFileDirectory
queryFileDirectory.description=Property defining where the test XML files are

iterations.name=Iterations
iterations.description=Not documented.


vUsers.name=VUsers
vUsers.description=Not documented.

timeLimit.name=TimeLimit
timeLimit.description=Property that returns the time limit for the test run in seconds. If the test is running after that time, it is terminated.

warmup.name=Warmup
warmup.description=Property that indicates whether this is a warmup test.

catalogURL.name=CatalogURL
catalogURL.description=Property that contains the URL of the catalog to be used by {@link mondrian.tui.CmdRunner} and XML/A Test.

warnIfNoPatternForDialect.name=WarnIfNoPatternForDialect
warnIfNoPatternForDialect.description=<p>Property that controls whether warning messages should be printed if a SQL comparison test does not contain expected SQL statements for the specified dialect. The tests are skipped if no expected SQL statements are found for the current dialect.</p> <p>Possible values are the following:</p> NONE: no warning (default); ANY: any dialect; ACCESS; DERBY; LUCIDDB; MYSQL ... and any Dialect enum in SqlPattern.Dialect <p>Specific tests can overwrite the default setting. The priority is: Settings besides ANY in mondrian.properties file; Any setting in the test; ANY</p>

useAggregates.name=UseAggregates
useAggregates.description=<p>Boolean property that controls whether Mondrian uses aggregate tables.</p> <p>If true, then Mondrian uses aggregate tables. This property is queried prior to each aggregate query so that changing the value of this property dynamically (not just at startup) is meaningful.</p> <p>Aggregates can be read from the database using the {@link #ReadAggregates} property but will not be used unless this property is set to true.</p>

readAggregates.name=ReadAggregates
readAggregates.description=<p>Boolean property that determines whether Mondrian should read aggregate tables.</p> <p>If set to true, then Mondrian scans the database for aggregate tables. Unless mondrian.rolap.aggregates.Use is set to true, the aggregates found will not be used.</p>

chooseAggregateByVolume.name=ChooseAggregateByVolume
chooseAggregateByVolume.description=<p>Boolean property that controls whether aggregate tables are ordered by their volume or row count.</p> <p>If true, Mondrian uses the aggregate table with the smallest volume (number of rows multiplied by number of columns); if false, Mondrian uses the aggregate table with the fewest rows.</p>

aggregateRules.name=AggregateRules
aggregateRules.description=<p>String property containing the name of the file which defines the rules for recognizing an aggregate table. Can be either a resource in the Mondrian jar or a URL.</p> <p>The default value is /DefaultRules.xml, which is in the mondrian.rolap.aggmatcher package in Mondrian.jar.</p> <p>Normally, this property is not set by a user.</p>

aggregateRuleTag.name=AggregateRuleTag
aggregateRuleTag.description=String property that is the AggRule element's tag value. Normally, this property is not set by a user.

generateAggregateSql.name=AggregateRuleTag
generateAggregateSql.description=Boolean property that controls whether to print the SQL code generated for aggregate tables. If set, then as each aggregate request is processed, both the lost and collapsed dimension create and insert sql code is printed. This is for use in the CmdRunner allowing one to create aggregate table generation sql.

disableLocalSegmentCache.name=DisableLocalSegmentCache
disableLocalSegmentCache.description=Boolean property that controls whether the data from segments is cached locally. To create custom caches, look for the SegmentCache SPI.

enableTriggers.name=EnableTriggers
enableTriggers.description=Boolean property that controls whether to notify the Mondrian system when a {@link MondrianProperties property value} changes. This allows objects dependent on Mondrian properties to react (that is, reload), when a given property changes via, say, <code>MondrianProperties.instance().populate(null)</code> or <code>MondrianProperties.instance().QueryLimit.set(50)</code>.

generateFormattedSql.name=GenerateFormattedSql
generateFormattedSql.description=Boolean property that controls pretty-print mode. If true, the all SqlQuery SQL strings will be generated in pretty-print mode, formatted for ease of reading.

enableNonEmptyOnAllAxis.name=EnableNonEmptyOnAllAxis
enableNonEmptyOnAllAxis.description=Boolean property that controls whether each query axis implicit has the NON EMPTY option set. The default is false.

expandNonNative.name=ExpandNonNative
expandNonNative.description=If this property is true, when looking for native evaluation of an expression, Mondrian will expand non-native sub-expressions into lists of members.

compareSiblingsByOrderKey.name=CompareSiblingsByOrderKey
compareSiblingsByOrderKey.description=Boolean property that controls whether sibling members are compared according to order key value fetched from their ordinal expression.  The default is false (only database ORDER BY is used).

enableExpCache.name=EnableExpCache
enableExpCache.description=Boolean property that controls whether to use a cache for frequently evaluated expressions. With the cache disabled, an expression like <code>Rank([Product].CurrentMember, Order([Product].MEMBERS, [Measures].[Unit Sales]))</code> would performmany redundant sorts. The default is true.

testExpDependencies.name=TestExpDependencies
testExpDependencies.description=Integer property that controls whether to test operators' dependencies, and how much time to spend doing it. If this property is positive, Mondrian's test framework allocates ane xpression evaluator which evaluates each expression several times, and makes sure that the results of the expression are independent of dimensions which the expression claims to be independent of. The default is 0.

testSeed.name=TestSeed
testSeed.description=Seed for random number generator used by some of the tests. Any value besides 0 or -1 gives deterministic behavior. The default value is 1234: most users should use this.Setting the seed to a different value can increase coverage, and therefore may uncover new bugs. If you set the value to 0, the system will generate its own pseudo-random seed. If you set the value to -1, Mondrian uses the next seed from an internal random-number generator. This is a little more deterministic than setting the value to 0.

localePropFile.name=LocalePropFile
localePropFile.description=String property that holds the name of the class whose resource bundle is to be used to for this schema. For example, if the class is {@code com.acme.MyResource}, mondrian will look for a resource bundle called {@code com/acme/MyResource_<i>locale</i>.properties} on the class path. (This property has a confusing name because in a previous release it actually held a file name.) Used for the {@link mondrian.i18n.LocalizingDynamicSchemaProcessor}; see Internationalization for more details.

enableNativeCrossJoin.name=EnableNativeCrossJoin
enableNativeCrossJoin.description= If enabled some NON EMPTY CrossJoin will be computed in SQL.

enableNativeTopCount.name=EnableNativeTopCount
enableNativeTopCount.description=If enabled some TopCount will be computed in SQL.

enableNativeFilter.name=EnableNativeFilter
enableNativeFilter.description=If enabled some Filter() will be computed in SQL.

enableNativeNonEmpty.name=EnableNativeNonEmpty
enableNativeNonEmpty.description=If enabled some NON EMPTY set operations like member.children, level.members and member descendants will be computed in SQL.

alertNativeEvaluationUnsupported.name=AlertNativeEvaluationUnsupported
alertNativeEvaluationUnsupported.description=Alerting action to take in case native evaluation of a function is enabled but not supported for that function's usage in a particular query.  (No alert is ever raised in cases where native evaluation would definitely have been wasted effort.) Recognized actions: OFF: do nothing (default action, also used if unrecognized action is specified) WARN: log a warning to RolapUtil logger ERROR: throw an instance of NativeEvaluationUnsupportedException

enableDrillThrough.name=EnableDrillThrough
enableDrillThrough.description=If disabled, Mondrian will throw an exception if someone attempts to perform a drillthrough of any kind.

enableTotalCount.name=EnableTotalCount
enableTotalCount.description=If enabled, first row in the result of an XML/A drill-through request will be filled with the total count of rows in underlying database.

caseSensitive.name=CaseSensitive
caseSensitive.description=Boolean property that controls whether the MDX parser resolves uses case-sensitive matching when looking up identifiers. The default is false.

maxRows.name=MaxRows
maxRows.description=Property that defines limit on the number of rows returned by XML/A drill through request.

maxConstraints.name=MaxConstraints
maxConstraints.description=Max number of constraints in a single 'IN' SQL clause. This value may be variant among database products and their runtime settings. Oracle, for example, gives the error ORA-01795: maximum number of expressions in a list is 1000. Recommended values: Oracle: 1,000, DB2: 2,500, Other: 10,000

optimizePredicates.name=OptimizePredicates
optimizePredicates.description=Boolean property that determines whether Mondrian optimizes predicates. If true, Mondrian may retrieve a little more data than specified in MDX query and cache it for future use.  For example, if you ask for data on 48 states of the United States for 3 quarters of 2011, Mondrian will round out to all 50 states and all 4 quarters.  If false, Mondrian still optimizes queries that involve all members of a dimension.

maxEvalDepth.name=MaxEvalDepth
maxEvalDepth.description=Integer property that defines the maximum number of passes allowable while evaluating an MDX expression. If evaluation exceeds this depth (for example, while evaluating a very complex calculated member), Mondrian will throw an error.

jdbcFactoryClass.name=JdbcFactoryClass
jdbcFactoryClass.description=Property that defines the JdbcSchema factory class which determines the list of tables and columns of a specific datasource. @see mondrian.rolap.aggmatcher.JdbcSchema

dataSourceResolverClass.name=DataSourceResolverClass
dataSourceResolverClass.description=Property that defines the name of the plugin class that resolves data source names to javax.sql.DataSource objects. The class must implement the mondrian.spi.DataSourceResolver interface. If not specified, the default implementation uses JNDI to perform resolution. Example: mondrian.spi.dataSourceResolverClass=mondrian.spi.impl.JndiDataSourceResolver

queryTimeout.name=QueryTimeout
queryTimeout.description=Property that defines the timeout value (in seconds) for queries. A value of 0 (the default) indicates no timeout.

rolapConnectionShepherdThreadPollingInterval.name=RolapConnectionShepherdThreadPollingInterval
rolapConnectionShepherdThreadPollingInterval.description=This controls query timeouts and cancellation, so a small value (a few milliseconds) is best. Setting this to a value higher than mondrian.rolap.queryTimeout will result the timeout not being enforced as expected. Default value is 1000.

rolapConnectionShepherdThreadPollingIntervalUnit.name=RolapConnectionShepherdThreadPollingIntervalUnit
rolapConnectionShepherdThreadPollingIntervalUnit.description=This controls query timeouts and cancellation Unit. Default time unit is MILLISECONDS.

rolapConnectionShepherdNbThreads.name=RolapConnectionShepherdNbThreads
rolapConnectionShepherdNbThreads.description=Maximum number of MDX query threads per Mondrian server instance. Defaults to 20.

segmentCacheManagerNumberSqlThreads.name=SegmentCacheManagerNumberSqlThreads
segmentCacheManagerNumberSqlThreads.description=Maximum number of threads per Mondrian server instance that are used to run SQL queries when populating segments. Defaults to 100.

segmentCacheManagerNumberCacheThreads.name=SegmentCacheManagerNumberCacheThreads
segmentCacheManagerNumberCacheThreads.description=Maximum number of threads per Mondrian server instance that are used to run perform operations on the external caches. Defaults to 100.

ignoreInvalidMembers.name=IgnoreInvalidMembers
ignoreInvalidMembers.description=Property that defines whether non-existent member errors should be ignored during schema load. If so, the non-existent member is treated as a null member.

ignoreInvalidMembersDuringQuery.name=IgnoreInvalidMembersDuringQuery
ignoreInvalidMembersDuringQuery.description=Property that defines whether non-existent member errors should be ignored during query validation. If so, the non-existent member is treated as a null member.

nullMemberRepresentation.name=NullMemberRepresentation
nullMemberRepresentation.description=Property that determines how a null member value is represented in the result output. AS 2000 shows this as empty value, AS 2005 shows this as (null) value

iterationLimit.name=IterationLimit
iterationLimit.description=Integer property indicating the maximum number of iterations allowed when iterating over members to compute aggregates.  A value of 0 (the default) indicates no limit.

checkCancelOrTimeoutInterval.name=CheckCancelOrTimeoutInterval
checkCancelOrTimeoutInterval.description=Positive integer property that determines loop iterations number between checks for whether the current mdx query has been cancelled or timeout was exceeded. Setting the interval too small may result in a performance degradation when reading large result sets; setting it too high can cause a big delay between the query being marked as cancelled or timeout was exceeded and system resources associated to it being released.

executionHistorySize.name=ExecutionHistorySize
executionHistorySize.description=Property that defines how many previous execution instances the Monitor keeps in its history so that it can send the events which happen after the fact. Setting this property too high will make the JVM run out of memory. Setting it too low might prevent some events from reaching the listeners of the monitor. This property is for internal use only and should not be changed unless required. Defaults to 1,000.

memoryMonitor.name=MemoryMonitor
memoryMonitor.description=Property that defines whether the <code>MemoryMonitor</code> should be enabled. By default it is disabled; memory monitor is not available before Java version 1.5.

memoryMonitorThreshold.name=MemoryMonitorThreshold
memoryMonitorThreshold.description=Property that defines the default MemoryMonitor percentage threshold. If enabled, when Java's memory monitor detects that post-garbage collection is above this value, notifications are generated.

expCompilerClass.name=ExpCompilerClass
expCompilerClass.description=Property that defines the name of the class used to compile scalar expressions. If the value is non-null, it is used by the ExpCompiler.Factory to create the implementation. To test that for all test MDX queries that all functions can handle requests for ITERABLE, LIST and MUTABLE_LIST evaluation results, use the following: mondrian.calc.ExpCompiler.class=mondrian.olap.fun.ResultStyleCompiler

propertyValueMapFactoryClass.name=PropertyValueMapFactoryClass
propertyValueMapFactoryClass.description=Property that defines the name of the factory class used to create maps of member properties to their respective values. If the value is non-null, it is used by the PropertyValueFactory to create the implementation.  If unset, mondrian.rolap.RolapMemberBase.DefaultPropertyValueMapFactory will be used.

crossJoinOptimizerSize.name=CrossJoinOptimizerSize
crossJoinOptimizerSize.description=Property that defines when to apply the crossjoin optimization algorithm. If a crossjoin input list's size is larger than this property's value and the axis has the NON EMPTY qualifier, then the crossjoin non-empty optimizer is applied. Setting this value to '0' means that for all crossjoin input lists in non-empty axes will have the optimizer applied. On the other hand, if the value is set larger than any possible list, say <code>Integer.MAX_VALUE</code>, then the optimizer will never be applied.

nullDenominatorProducesNull.name=NullDenominatorProducesNull
nullDenominatorProducesNull.description=Property that defines the behavior of division if the denominator evaluates to zero. If false (the default), if a division has a non-null numerator and a null denominator, it evaluates to Infinity, which conforms to SSAS behavior. If true, the result is null if the denominator is null. Setting to true enables the old semantics of evaluating this to null; this does not conform to SSAS, but is useful in some applications.

currentMemberWithCompoundSlicerAlert.name=CurrentMemberWithCompoundSlicerAlert
currentMemberWithCompoundSlicerAlert.description=Alerting action to take when a CurrentMember function is applied to a dimension that is also a compound slicer; Recognized actions: OFF: do nothing; WARN: log a warning; ERROR: throw an CurrentMemberWithCompoundSlicerMondrianException

enableGroupingSets.name=EnableGroupingSets
enableGroupingSets.description=Property that defines whether to generate SQL queries using the GROUPING SETS construct for rollup. By default it is not enabled. Ignored on databases which do not support the GROUPING SETS construct (see mondrian.spi.Dialect#supportsGroupingSets).

ignoreMeasureForNonJoiningDimension.name=IgnoreMeasureForNonJoiningDimension
ignoreMeasureForNonJoiningDimension.description=Property that defines whether to ignore measure when non joining dimension is in the tuple during aggregation. If there are unrelated dimensions to a measure in context during aggregation, the measure is ignored in the evaluation context. This behaviour kicks in only if the CubeUsage for this measure has IgnoreUnrelatedDimensions attribute set to false. For example, Gender doesn't join with [Warehouse Sales] measure. With mondrian.olap.agg.IgnoreMeasureForNonJoiningDimension=true Warehouse Sales gets eliminated and is ignored in the aggregate value. SUM({Product.members * Gender.members})    7,913,333.82 With mondrian.olap.agg.IgnoreMeasureForNonJoiningDimension=false Warehouse Sales with Gender All level member contributes to the aggregate value. [Store Sales] + [Warehouse Sales] SUM({Product.members * Gender.members})    9,290,730.03 On a report where Gender M, F and All members exist a user will see a large aggregated value compared to the aggregated value that can be arrived at by summing up values against Gender M and F. This can be confusing to the user. This feature can be used to eliminate such a  situation.

needDimensionPrefix.name=NeedDimensionPrefix
needDimensionPrefix.description=Property determines if elements of dimension (levels, hierarchies, members) need to be prefixed with dimension name in MDX query. For example when the property is true, the following queries will error out. The same queries will work when this property is set to false. select {[M]} on 0 from sales select {[USA]} on 0 from sales select {[USA].[CA].[Santa Monica]}  on 0 from sales When the property is set to true, any query where elements are prefixed with dimension name as below will work select {[Gender].[F]} on 0 from sales select {[Customers].[Santa Monica]} on 0 from sales. Please note that this property does not govern the behaviour wherein [Gender].[M] is resolved into a fully qualified [Gender].[M] In a scenario where the schema is very large and dimensions have large number of members a MDX query that has a invalid member in it will cause mondrian to to go through all the dimensions, levels, hierarchies,  members and properties trying to resolve the element name. This behavior consumes considerable time and resources on the server. Setting this property to true will make it fail fast in a scenario where it is desirable.

enableRolapCubeMemberCache.name=EnableRolapCubeMemberCache
enableRolapCubeMemberCache.description=Property that determines whether to cache RolapCubeMember objects, each of which associates a member of a shared hierarchy with a particular cube in which it is being used. The default is {@code true}, that is, use a cache. If you wish to use the member cache control aspects of {@link mondrian.olap.CacheControl}, you must set this property to false. RolapCubeMember has recently become more lightweight to construct, and we may obsolete this cache and this property.

solveOrderMode.name=SolveOrderMode
solveOrderMode.description=Property that controls the behavior of {@link Property#SOLVE_ORDER solve order} of calculated members and sets. Valid values are scoped and absolute (the default). See  {@link mondrian.olap.SolveOrderMode} for details.

compoundSlicerMemberSolveOrder.name=CompoundSlicerMemberSolveOrder
compoundSlicerMemberSolveOrder.description=Property that sets the compound slicer member solve order.

nativizeMinThreshold.name=NativizeMinThreshold
nativizeMinThreshold.description=<p>Property that controls minimum expected cardinality required in order for NativizeSet to natively evaluate a query.</p> <p>If the expected cardinality falls below this level the query is executed non-natively.</p> <p>It is possible for the actual cardinality to fall below this threshold even though the expected cardinality falls above this threshold. In this case the query will be natively evaluated.</p>

nativizeMaxResults.name=NativizeMaxResults
nativizeMaxResults.description=<p>Property that controls the maximum number of results contained in a NativizeSet result set.</p> <p>If the number of tuples contained in the result set exceeds this value Mondrian throws a LimitExceededDuringCrossjoin error.</p>

ssasCompatibleNaming.name=SsasCompatibleNaming
ssasCompatibleNaming.description=<p>Property that defines whether to enable new naming behavior.</p> <p>If true, hierarchies are named [Dimension].[Hierarchy]; if false, [Dimension.Hierarchy].</p>

filterChildlessSnowflakeMembers.name=FilterChildlessSnowflakeMembers
filterChildlessSnowflakeMembers.description=<p>Property that defines whether to generate joins to filter out members in a snowflake dimension that do not have any children.</p> <p>If true (the default), some queries to query members of high levels snowflake dimensions will be more expensive. If false, and if there are rows in an outer snowflake table that are not referenced by a row in an inner snowflake table, then some queries will return members that have no children.</p> <p>Our recommendation, for best performance, is to remove rows outer snowflake tables are not referenced by any row in an inner snowflake table, during your ETL process, and to set this property to false.</p>

statisticsProviders.name=StatisticsProviders
statisticsProviders.description=<p>Comma-separated list of classes to be used to get statistics about the number of rows in a table, or the number of distinct values in a column.</p> <p>If there is a value for mondrian.statistics.providers.DATABASE, where DAtABASE is the current database name (e.g. MYSQL or ORACLE), then that property overrides.</p> <p>Example:</p> mondrian.statistics.providers=mondrian.spi.impl.JdbcStatisticsProvider, mondrian.statistics.providers.MYSQL=mondrian.spi.impl.JdbcStatisticsProvider,mondrian.spi.impl.JdbcStatisticsProvider <p>This would use JDBC's statistics (via the java.sql.DatabaseMetaData.getIndexInfo method) for most databases, but for connections to a MySQL database, would use external statistics first, and fall back to JDBC statistics  only if external statistics were not available.</p>

levelPreCacheThreshold.name=LevelPreCacheThreshold
levelPreCacheThreshold.description=<p>Property which governs whether child members or members of a level are precached when child or level members are requested within a query expression.  For example, if an expression references two child members in the store dimension, like <code>{ [Store].[USA].[CA], [Store].[USA].[OR] }</code>, precaching will load *all* children under [USA] rather than just the 2 requested. The threshold value is compared against the cardinality of the level to determine whether or not precaching should be performed.  If cardinality is lower than the threshold value Mondrian will precache.  Setting this property to 0 effectively disables precaching. </p>

webappDeploy.name=WebappDeploy
webappDeploy.description=<p>Where mondrian.war will be deployed to. (Used by mondrian's build.xml ant file only.)</p> <p>Example: <code>mondrian.webapp.deploy=C:/jboss-4.0.2/server/default/deploy</code></p>

webappConnectString.name=WebappConnectString
webappConnectString.description=<p>Connect string for the webapp. (Used by the webapp only.)</p> <p>To achieve access control, append say <code>;Role='California manager'</code> to the connect string.</p>

log4jConfiguration.name=Log4jConfiguration
log4jConfiguration.description=<p>Set mondrian logging information if not provided by containing application.</p> <p>Examples:</p>log4j.configuration=file://full/path/log4j.xml log4j.configuration=file:log4j.properties

idleOrphanSessionTimeout.name=IdleOrphanSessionTimeout
idleOrphanSessionTimeout.description=<p>The server will close a session if it is not in use for the specified timeout. Default value is 3600 seconds.</p>

enableSessionCaching.name=EnableSessionCaching
enableSessionCaching.description=<p> If enable, then data cache will be created for every session.</p>

caseSensitiveMdxInstr.name=CaseSensitiveMdxInstr
caseSensitiveMdxInstr.description=<p>If true, then MDX functions InStr and InStrRev are case sensitive. Default value is false. </p>
